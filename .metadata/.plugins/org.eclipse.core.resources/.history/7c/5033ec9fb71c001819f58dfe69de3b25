
public class CounterThread implements Runnable{
	
	private int min;
	private int max;
	private long sleepTime;
	private String sign;
	public int getMin() {
		return min;
	}
	public void setMin(int min) {
		this.min = min;
	}
	public int getMax() {
		return max;
	}
	public void setMax(int max) {
		this.max = max;
	}
	public long getSleepTime() {
		return sleepTime;
	}
	public void setSleepTime(long sleepTime) {
		this.sleepTime = sleepTime;
	}
	public String getSign() {
		return sign;
	}
	public void setSign(String sign) {
		this.sign = sign;
	}
	public CounterThread(int min, int max, long sleepTime, String sign) {
		super();
		this.min = min;
		this.max = max;
		this.sleepTime = sleepTime;
		this.sign = sign;
	}
	@Override
	public void run() {
		// TODO Auto-generated method stub
		
		for(int i = min; i<=max; i++){
			System.out.println(" "+sign+" ");
			
			try {
				Thread.sleep(sleepTime);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
	}
	
	
	

}
